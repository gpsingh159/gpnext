import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
// import Helmet from "react-helmet";

const inter = Inter({ subsets: ["latin"] });

interface Props {
  todos: Array<{ id: number; title: string }>;
}
// export async function getServerSideProps() {
  // export async function getInitialProps() {
    export async function getStaticProps() {
    let data = null ;
    let resp = null ;
  // setTimeout(async () => {
     resp = await fetch("https://jsonplaceholder.typicode.com/todos");

//  }, 3000);
 data = await resp?.json();
 console.log("type of data ",typeof data)
 console.log("data")
  return {
    props: {
      todos: data,
    },
  };
}

export default function Home(props:Props) {
const {todos} = props ;

interface todo  {
  id: number;
  title: string;
};
// export default function Home() {
  // type todo = {
  //   id: number;
  //   title: string;
  // };
  // const [todos, setTodos] = useState<todo[]>([]);

  // useEffect(() => {
  //   const fetchTodos = async () => {
  //     const resp = await fetch("https://jsonplaceholder.typicode.com/todos");
  //     const data = await resp?.json();
  //     setTodos(data);
  //   };
  //   fetchTodos();
  // }, []);

  return (
    <>
      <Head>
        <title>hello bro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Helmet>
      <title>hello bro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Helmet>
       */}
        <main className={`${styles.main} ${inter.className}`}>
          {todos?.length === 0 ? (
            <div> Loading... </div>
          ) : (
            todos?.map((todo) => (
              <li key={todo.id}>
                {" "}
                {todo.id} : {todo.title}
              </li>
            ))
          )}
        </main>
      
    </>
  );
}
